@page "/fetchdata"
@using Newtonsoft.Json
@using System.Net.Http.Json
@using System.Net.Http
@using System.Linq
@using Data
@using t3d = BlazorStrap
@using Blazority
@using Microsoft.Extensions.Logging;
@inject ILogger<FetchData> logger;
@inject HttpClient Http;


<style>
    .rz-datepicker-title {
        font-size: 6px;
    }
</style>


<PageTitle>Mars API Photos</PageTitle>


<div class="container-fluid text-center">
    <div class="row content">
        <div class="col-sm-2 sidenav">
            <p><a href="https://en.wikipedia.org/wiki/Mars_rover">Rover Wiki</a></p>
            <p><a href="https://mars.nasa.gov/mer/">Nasa</a></p>
            <p><a href="https://api.nasa.gov/">API Link</a></p>
        </div>
        <div class="col-sm-8 text-left">
            <div class="row"></div>
            <div class="col">
                <img src="../wwwroot/Images/pers.jfif" width="300" />
            </div>
            <div class="col">
                <img src="../wwwroot/Images/pers.jfif" width="300" />
            </div>
            <div class="row"></div>
            <div class="col">
                <img src="../wwwroot/Images/pers.jfif" width="300" />
            </div>
            <div class="col">
                <img src="../wwwroot/Images/pers.jfif" width="300" />
            </div>

            <hr>
            <h1>Welcome</h1>
            <p>
                My name is Darren McLean and this is my Enterprise Application Development Web Page. This Page was built using Microsofts Blazer WebAssembly. This application
                will gather data from an Api developed by Nasa. It will contain data from their Rover missions on Mars. Click the wiki link for more
            </p>


        </div>

    </div>

</div>


@code {


    const string APIKEY = "api_key=vT5CQ2aqemBmK4jfX3ceTtFpbmu8bM62ft2YwywO";

    public List<Photo> p1 = new List<Photo>();
    public MarsQuery q1 = new MarsQuery();
    public TempUser t1 = new TempUser();
    public List<Manifest> m1 = new List<Manifest>();

    DateTime? value = DateTime.Now;

    IEnumerable<DateTime> dates = new DateTime[] { DateTime.Today.AddDays(-1), DateTime.Today.AddDays(1) };


    public enum ROVER
    {

        Perseverance,
        Opportunity,
        Curiosity,
        Spirit
    }
    private async void CallRover()
    {

        try
        {


            Root? myDeserializedClass = JsonConvert.DeserializeObject<Root>(await Http.GetStringAsync("https://api.nasa.gov/mars-photos/api/v1/rovers/" + q1.RoverName + "/photos?sol=" + q1.solDay + "&" + APIKEY));
            p1 = myDeserializedClass.photos;

            //https://api.nasa.gov/mars-photos/api/v1/rovers/Perseverance/photos?landing_date=2021-02-18&api_key=vT5CQ2aqemBmK4jfX3ceTtFpbmu8bM62ft2YwywO

            if (p1.Count != 0)
            {
                Console.WriteLine(p1.Count);
                q1.isEmpty = false;

            }
            else
            {

                Console.WriteLine("zeroo");
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
        }
    }
    // validation passed and form submitted

    public void NextDay()
    {

        if (q1.solDay != null)
        {
            int day = Int32.Parse(q1.solDay);

            day++;

            q1.solDay = day.ToString();


        }

        else
        {
            throw new InvalidOperationException("No current day!");
        }
    }

    public void AddtoFav(Photo pIn)
    {

        t1.myFavs.Add(pIn);

    }

    protected override async Task OnInitializedAsync()
    {
        try
        {

            Console.WriteLine("https://api.nasa.gov/mars-photos/api/v1/rovers/" + q1.RoverName + "/photos?sol=" + q1.solDay + "&" + APIKEY);
            //https://api.nasa.gov/mars-photos/api/v1/rovers/Perseverance/photos?landing_date=2021-02-18&api_key=vT5CQ2aqemBmK4jfX3ceTtFpbmu8bM62ft2YwywO


            foreach (string name in Enum.GetNames(typeof(RoverNames)))
            {
                Root? myDeserializedClassm1 = JsonConvert.DeserializeObject<Root>(await Http.GetStringAsync("https://api.nasa.gov/mars-photos/api/v1/manifests/" + name + "?" + APIKEY));
                Manifest m2 = myDeserializedClassm1.photo_manifest;

                m1.Add(m2);

            };

        }
        catch (Exception ex)
        {
            logger.LogError($"Failed to initialize MyComponent. Error: {ex}");
            Console.WriteLine($"Failed to initialize MyComponent. Error: {ex}");
        }

    }

}
